// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "rhel-openssl-3.0.x"]
}

enum CaseStatus {
  OPEN
  PROCESSING
  REJECTED
  RESOLVED
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  email      String     @unique
  dateJoined DateTime?
  cases      Case[]
  Evidence   Evidence[]
}

model AnonymousUser {
  anonymousId String     @id @default(uuid())
  ipAddress   String
  createdAt   DateTime   @default(now())
  Case        Case[]
  Evidence    Evidence[]
}

model Case {
  id                    String         @id @default(uuid())
  reportedByUser        User?          @relation(fields: [userId], references: [id])
  reportedByAnonymous   AnonymousUser? @relation(fields: [anonymousId], references: [anonymousId])
  title                 String
  description           String
  incidentHappenedTo    String
  incidentTypes         String[]
  incidentConnections   String[]
  reporterConnection    String
  affectedConnection    String
  perpetratorConnection String
  dateCreated           DateTime       @default(now())
  dateUpdated           DateTime       @updatedAt
  userId                String?
  anonymousId           String?
  status                CaseStatus     @default(OPEN)
  toxic                 Boolean        @default(false)
  Evidence              Evidence[]
  anonymousReason       String[]
  consentToReport       Boolean
  consentToUpload       Boolean
}

model Evidence {
  id                  String         @id @default(uuid())
  case                Case           @relation(fields: [caseId], references: [id])
  uploadedBy          User?          @relation(fields: [userId], references: [id])
  uploadedByAnonymous AnonymousUser? @relation(fields: [anonymousId], references: [anonymousId])
  caseId              String
  url                 String
  userId              String?
  anonymousId         String?
  uploadedAt          DateTime       @default(now())
}
